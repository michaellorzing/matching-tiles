{"ast":null,"code":"var _jsxFileName = \"c:\\\\Users\\\\ghost\\\\OneDrive\\\\Desktop\\\\classwork\\\\Homework\\\\matching-tiles\\\\matching-tiles\\\\src\\\\App.js\";\nimport React from 'react';\nimport { Container } from 'reactstrap';\nimport shuffle from 'lodash/shuffle';\nimport Card from './components/card';\nimport Navbar from './components/Navbar';\nimport Wrapper from './components/Wrapper';\nimport cards from './cards.json';\nimport './App.css';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.shuffleCards = () => {\n      this.setState({\n        cardsList: shuffle(this.state.cardsList)\n      });\n    };\n\n    this.pushPick = id => {\n      this.setState({\n        selected: this.state.selected.concat(id)\n      });\n\n      if (this.state.selected.indexOf(id) === -1) {\n        this.setState(prevState => {\n          return {\n            score: prevState.score++\n          };\n        });\n      } else {\n        alert(\"You've already selected that card!\");\n        this.setState({\n          score: 0,\n          topScore: 0,\n          selected: []\n        });\n      }\n    };\n\n    this.newTopScore = () => {\n      if (this.state.score !== this.state.topScore) {\n        this.setState({\n          topScore: this.state.score\n        });\n      }\n    };\n\n    this.state = {\n      cardsList: cards,\n      score: 0,\n      topScore: 0,\n      selected: []\n    };\n    this.handleClickEvent = this.handleClickEvent.bind(this);\n  }\n\n  handleClickEvent() {\n    this.shuffleCards();\n    this.newTopScore();\n    this.pushPick();\n  }\n\n  render() {\n    const _this$state = this.state,\n          cardsList = _this$state.cardsList,\n          score = _this$state.score,\n          topScore = _this$state.topScore;\n    console.log(this.state.cards.id);\n    console.log(this.state);\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(Navbar, {\n      currentScore: score,\n      topScore: topScore,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }), React.createElement(Container, {\n      fluid: true,\n      style: containerStyle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(Wrapper, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, cardsList.map(card => {\n      // console.log(card)\n      return React.createElement(Card, {\n        key: card.id,\n        name: card.name,\n        image: card.image,\n        id: card.id,\n        clicked: card.clicked,\n        handleClick: this.handleClickEvent,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      });\n    }))));\n  }\n\n}\n\n;\nconst containerStyle = {\n  background: 'grey'\n};\nexport default App;","map":{"version":3,"sources":["c:\\Users\\ghost\\OneDrive\\Desktop\\classwork\\Homework\\matching-tiles\\matching-tiles\\src\\App.js"],"names":["React","Container","shuffle","Card","Navbar","Wrapper","cards","App","Component","constructor","props","shuffleCards","setState","cardsList","state","pushPick","id","selected","concat","indexOf","prevState","score","alert","topScore","newTopScore","handleClickEvent","bind","render","console","log","containerStyle","map","card","name","image","clicked","background"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { Container } from 'reactstrap';\r\nimport shuffle from 'lodash/shuffle';\r\nimport Card from './components/card';\r\nimport Navbar from './components/Navbar';\r\nimport Wrapper from './components/Wrapper';\r\nimport cards from './cards.json';\r\nimport './App.css';\r\n\r\nclass App extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      cardsList: cards,\r\n      score: 0,\r\n      topScore: 0,\r\n      selected: []\r\n    };\r\n    this.handleClickEvent = this.handleClickEvent.bind(this)\r\n  };\r\n\r\n\r\n  handleClickEvent() {\r\n    this.shuffleCards()\r\n    this.newTopScore()\r\n    this.pushPick()\r\n  }\r\n\r\n  shuffleCards = () => {\r\n    this.setState({\r\n      cardsList: shuffle(this.state.cardsList)\r\n    })\r\n\r\n  }\r\n\r\n  pushPick = id => {\r\n    this.setState({\r\n      selected: this.state.selected.concat(id)\r\n    })\r\n    if (this.state.selected.indexOf(id) === -1) {\r\n      \r\n      this.setState(prevState => {\r\n        return {score: prevState.score++}\r\n      });\r\n    } else {\r\n      alert(\"You've already selected that card!\")\r\n      this.setState({\r\n        score: 0,\r\n        topScore: 0,\r\n        selected: []\r\n      })\r\n    }\r\n  };\r\n\r\n  newTopScore = () => {\r\n    if (this.state.score !== this.state.topScore){\r\n      this.setState({\r\n        topScore: this.state.score\r\n      })\r\n    }\r\n  }\r\n\r\n\r\n  render() {\r\n    const { cardsList, score, topScore } = this.state\r\n    console.log(this.state.cards.id)\r\n    console.log(this.state)\r\n    return (\r\n      <React.Fragment>\r\n        <Navbar currentScore={score} topScore={topScore}/>\r\n        <Container fluid style={containerStyle}>\r\n          <Wrapper>\r\n            {\r\n              cardsList.map(card => {\r\n                // console.log(card)\r\n                return (\r\n                  <Card\r\n                    key={card.id}\r\n                    name={card.name}\r\n                    image={card.image}\r\n                    id={card.id}\r\n                    clicked={card.clicked}\r\n                    handleClick={this.handleClickEvent}\r\n                  />\r\n                )\r\n              })\r\n            }\r\n          </Wrapper>\r\n        </Container>\r\n      </React.Fragment>\r\n    );\r\n  };\r\n};\r\n\r\nconst containerStyle = {\r\n  background: 'grey'\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}