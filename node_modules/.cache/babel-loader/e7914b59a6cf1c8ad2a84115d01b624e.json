{"ast":null,"code":"var _jsxFileName = \"c:\\\\Users\\\\ghost\\\\OneDrive\\\\Desktop\\\\classwork\\\\Homework\\\\matching-tiles\\\\matching-tiles\\\\src\\\\App.js\";\nimport React from 'react';\nimport { Container } from 'reactstrap';\nimport shuffle from 'lodash/shuffle';\nimport Card from './components/card';\nimport Navbar from './components/Navbar';\nimport Wrapper from './components/Wrapper';\nimport cards from './cards.json';\nimport './App.css';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.shuffleCards = () => {\n      this.setState({\n        cardsList: shuffle(this.state.cardsList)\n      });\n    };\n\n    this.pushPick = id => {\n      if (this.state.selected.indexOf(id) === -1) {\n        this.setState({\n          selected: this.state.selected.concat(id)\n        });\n        this.handleScore();\n      } else {\n        alert(\"You've already selected that card!\");\n        this.setState({\n          score: 0,\n          topScore: 0,\n          selected: []\n        });\n      }\n    };\n\n    this.handleScore = () => {\n      const currentScore = this.state.score + 1;\n      this.setState({\n        score: currentScore\n      });\n\n      if (currentScore >= this.state.topScore) {\n        this.setState({\n          topScore: currentScore\n        });\n      }\n    };\n\n    this.state = {\n      cardsList: cards,\n      score: 0,\n      topScore: 0,\n      selected: []\n    };\n    this.handleClickEvent = this.handleClickEvent.bind(this);\n  }\n\n  handleClickEvent(id) {\n    this.shuffleCards();\n    this.handleScore();\n    this.pushPick(id);\n  }\n\n  render() {\n    const _this$state = this.state,\n          cardsList = _this$state.cardsList,\n          score = _this$state.score,\n          topScore = _this$state.topScore; // console.log(this.state.cardsList.id)\n    // console.log(this.state)\n\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }, React.createElement(Navbar, {\n      currentScore: score,\n      topScore: topScore,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }), React.createElement(Container, {\n      fluid: true,\n      style: containerStyle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(Wrapper, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, cardsList.map(card => {\n      // console.log(card)\n      return React.createElement(Card, {\n        key: card.id,\n        name: card.name,\n        image: card.image,\n        id: card.id,\n        handleClick: this.handleClickEvent,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      });\n    }))));\n  }\n\n}\n\n;\nconst containerStyle = {\n  background: 'grey'\n};\nexport default App;","map":{"version":3,"sources":["c:\\Users\\ghost\\OneDrive\\Desktop\\classwork\\Homework\\matching-tiles\\matching-tiles\\src\\App.js"],"names":["React","Container","shuffle","Card","Navbar","Wrapper","cards","App","Component","constructor","props","shuffleCards","setState","cardsList","state","pushPick","id","selected","indexOf","concat","handleScore","alert","score","topScore","currentScore","handleClickEvent","bind","render","containerStyle","map","card","name","image","background"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { Container } from 'reactstrap';\r\nimport shuffle from 'lodash/shuffle';\r\nimport Card from './components/card';\r\nimport Navbar from './components/Navbar';\r\nimport Wrapper from './components/Wrapper';\r\nimport cards from './cards.json';\r\nimport './App.css';\r\n\r\nclass App extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      cardsList: cards,\r\n      score: 0,\r\n      topScore: 0,\r\n      selected: []\r\n    };\r\n    this.handleClickEvent = this.handleClickEvent.bind(this)\r\n  };\r\n\r\n\r\n  handleClickEvent(id) {\r\n    this.shuffleCards()\r\n    this.handleScore()\r\n    this.pushPick(id)\r\n  }\r\n\r\n  shuffleCards = () => {\r\n    this.setState({\r\n      cardsList: shuffle(this.state.cardsList)\r\n    })\r\n\r\n  }\r\n\r\n  pushPick = id => {\r\n    if (this.state.selected.indexOf(id) === -1) {\r\n      this.setState({\r\n        selected: this.state.selected.concat(id)\r\n      })\r\n      this.handleScore()\r\n    } else {\r\n      alert(\"You've already selected that card!\")\r\n      this.setState({\r\n        score: 0,\r\n        topScore: 0,\r\n        selected: []\r\n      })\r\n    }\r\n  };\r\n\r\n  handleScore = () => {\r\n    const currentScore = this.state.score + 1\r\n    this.setState({\r\n      score: currentScore\r\n    })\r\n    if (currentScore >= this.state.topScore){\r\n      this.setState({\r\n        topScore: currentScore\r\n      })\r\n    }\r\n  }\r\n\r\n\r\n  render() {\r\n    const { cardsList, score, topScore } = this.state\r\n    // console.log(this.state.cardsList.id)\r\n    // console.log(this.state)\r\n    return (\r\n      <React.Fragment>\r\n        <Navbar currentScore={score} topScore={topScore}/>\r\n        <Container fluid style={containerStyle}>\r\n          <Wrapper>\r\n            {\r\n              cardsList.map(card => {\r\n                // console.log(card)\r\n                return (\r\n                  <Card\r\n                    key={card.id}\r\n                    name={card.name}\r\n                    image={card.image}\r\n                    id={card.id}\r\n                    handleClick={this.handleClickEvent}\r\n                  />\r\n                )\r\n              })\r\n            }\r\n          </Wrapper>\r\n        </Container>\r\n      </React.Fragment>\r\n    );\r\n  };\r\n};\r\n\r\nconst containerStyle = {\r\n  background: 'grey'\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}